/**
 * @file
 * Layout Styling (DIV Positioning)
 *
 * Define CSS classes to create a table-free, 3-column, 2-column, or single
 * column layout depending on whether blocks are enabled in the left or right
 * columns.
 *
 * This layout is based on the Zen Columns layout method.
 *   http://drupal.org/node/201428
 *
 * Only CSS that affects the layout (positioning) of major elements should be
 * listed here.  Such as:
 *   display, position, float, clear, width, height, min-width, min-height
 *   margin, border, padding, overflow
 */


/*
 * Body
 */
body {
}

#page-wrapper,
.region-bottom,
#content article.top-section-pinned > .fixed > div {
  margin-left: auto;
  margin-right: auto;
  width: 100%;
	max-width: 1424px;
}

#content article.top-section-pinned > .fixed > div > *,
#page-wrapper > div, #page-wrapper > header, #page-wrapper > footer, #main, #page-wrapper > div {
	padding: 0 2%;
}

body.front #main {
  padding-top: 1.25em;.
}

#page-wrapper > section, #page-wrapper > header,
#page-wrapper > footer {
	width: 96%;
}

#page-wrapper > header, #page-wrapper > footer {
	overflow: hidden;
}

#page {
}

/*
 * Header
 */
#header {
}

#header .section {
}

.region-header {
}

/*
 * Main (container for everything else)
 */
#main-wrapper {
  position: relative;
}

#main {
}

/*
 * Content
 */

#content {
	width: 100%;
  margin: 0;
  padding: 0;
}

/*
 * Navigation
 */
#navigation {
  float: left; /* LTR */
  width: 100%;
  margin-left: 0; /* LTR */
  margin-right: -100%; /* LTR */ /* Negative value of #navigation's width + left margin. */
  padding: 0; /* DO NOT CHANGE. Add padding or margin to #navigation .section. */
  height: 3em; /* The navigation can have any arbritrary height. We picked one
                    that is the line-height plus 1em: 1.3 + 1 = 2.3
                    Set this to the same value as the margin-top below. */
}

.with-navigation #content,
.with-navigation .region-sidebar-first,
.with-navigation .region-sidebar-second {
  margin-top: 3em; /* Set this to the same value as the navigation height above. */
}

#navigation .section {
}

/*
 * First sidebar
 */
.sidebars {
  width: 33.33%;
  padding: 0; 
}

#sidebar-first {
	float: left;
}

.region-sidebar-first .section {
  margin: 0; /* LTR */
  padding: 0;
}

/*
 * Footer
 */
.region-footer {
}

/*
 * Page bottom
 */
.region-bottom /* See also the #page-wrapper declaration above that this div shares. */ {
}

/*
 * Prevent overflowing content
 */
#header,
#content,
#navigation,
.region-sidebar-first,
.region-sidebar-second,
.region-footer,
.region-bottom {
  overflow: visible;
  word-wrap: break-word; /* A very nice CSS3 property */
}

/*
 * If a div.clearfix doesn't have any content after it and its bottom edge
 * touches the bottom of the viewport, Firefox and Safari will mistakenly
 * place several pixels worth of space between the bottom of the div and the
 * bottom of the viewport. Uncomment this CSS property to fix this.
 * Note: with some over-large content, this property might cause scrollbars
 * to appear on the #page-wrapper div.
 */
/*
#page-wrapper {
  overflow-y: hidden;
}
*/


#skip-link, .alt-text {
	position: absolute;
	top: 0;
	left: -9999em;
}