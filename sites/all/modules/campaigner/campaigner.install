<?php

  function campaigner_schema() {
    $schema                    = array();
    $schema['cache_geos']      = array(
      'description'  => 'Caches objects created by the GEOS PHP plugin for the campaigner module',
      'fields'       => array(
        'cid'           => array(
          'description' => 'The identifier for the cache item',
          'type'        => 'serial',
          'unsigned'    => TRUE,
          'not null'    => TRUE
        ),
        'entity_id'     => array(
          'description' => "Foreign key for the node",
          'type'        => "int",
          'unsigned'    => TRUE,
          'not null'    => TRUE,
          'default'     => 0
        ),
        'polygonobject' => array(
          'description' => "Serialised version of the polygon",
          'type'        => "text",
          'size'        => "big",
          'not null'    => TRUE
        ),
        'centre'        => array(
          'description' => "The centre of the polygon",
          'type'        => 'varchar',
          'length'      => 255,
          'not null'    => FALSE
        ),
        'modified'      => array(
          'description' => "The last time this record was modified (UNIX timestamp)",
          'default'     => 0,
          'type'        => "int",
          'unsigned'    => TRUE,
          'not null'    => TRUE,
        )
      ),
      'primary key'  => array(
        'cid'
      ),
      'foreign keys' => array(
        'nodeid' => array(
          'table'   => "node",
          'columns' => array("entity_id" => "nid")
        )
      ),
      'unique keys'  => array(
        'entityid' => array(
          'entity_id'
        )
      )
    );
    $schema['postcode_lookup'] = array(
      'description' => "Allows the storage of postcodes and long/lat co-ordinates",
      'fields'      => array(
        'postcode' => array(
          'description' => "The postal code",
          'type'        => 'varchar',
          'length'      => 255,
          'not null'    => TRUE
        ),
        'easting'  => array(
          'description' => "Eastern point (x)",
          'type'        => 'int',
          'size'        => 'medium',
          'unsigned'    => TRUE,
          'not null'    => TRUE
        ),
        'northing' => array(
          'description' => "Northern point (y)",
          'type'        => 'int',
          'size'        => 'medium',
          'unsigned'    => TRUE,
          'not null'    => TRUE
        ),
        'lng'      => array(
          'description' => "The longitude of the centre of the postcode",
          'type'        => "float",
          'size'        => "big",
          'not null'    => TRUE
        ),
        'lat'      => array(
          'description' => "The latitude of the centre of the postcode",
          'type'        => "float",
          'size'        => "big",
          'not null'    => TRUE
        )
      ),
      'primary key' => array('postcode')
    );
    $schema['signatures']      = array(
      'description' => 'Stores records of signatures',
      'fields'      => array(
        'id'       => array(
          'description' => 'The identifier for the signature',
          'type'        => 'serial',
          'unsigned'    => TRUE,
          'not null'    => TRUE
        ),
        'email'    => array(
          'description' => "The email address of the person signing",
          'type'        => 'text',
          'not null'    => TRUE
        ),
        'region'   => array(
          'description' => "A foreign key to the region",
          'type'        => "int",
          'not null'    => TRUE,
          'unsigned'    => TRUE,
        ),
        'action'   => array(
          'description' => "A foreign key for the action",
          'type'        => "int",
          'not null'    => TRUE,
          'unsigned'    => TRUE,
        ),
        'postcode' => array(
          'description' => "The postal code",
          'type'        => 'varchar',
          'length'      => 10,
          'not null'    => TRUE
        ),
        "spam"   => array(
          'description' => "Allows a signature to be marked as spam",
          'type'        => "int",
          "size"        => "tiny",
          "not null"    => TRUE,
          "default"     => 0
        ),
        "name" => array(
          "description" => "Signer's real name",
          'type'        => "varchar",
          "length"      => 255,
          "not null"    => FALSE
        ),
        "identifier" => array(
          'description' => "Other identifier (e.g. IP address)",
          'type'        => "text",
          'size'        => "medium",
          'not null'    => FALSE
        ),
        "first_name" => array(
          'description' => "The first name of the signer",
          'type'        => "varchar",
          "length"      => 255,
          "not null"    => FALSE
        ),
        "last_name" => array(
          'description' => "The last name of the signer",
          'type'        => "varchar",
          "length"      => 255,
          "not null"    => FALSE
        ),
        "created" => array(
          'description' => "Time petition was signed",
          'type'        => "int",
          'unsigned'    => TRUE,
          'not null'    => TRUE,
          'default'     => 0
        ),
        'uid' => array(
          'description' => "The User ID of the signer (if known)",
          'type'        => "int",
          "not null"    => FALSE,
          "unsigned" => TRUE
        )
      ),
      'primary key' => array('id'),
      'indexes'     => array(
        'pcode'  => array('postcode'),
        'action' => array("action"),
        'region' => array("region"),
        'uid' => array("uid")
      )
    );
    $schema['spam'] = array(
      'description'  => 'Stores spam and spam ratings',
      'fields'       => array(
        'token'           => array(
          'description' => 'The token being scored, this is the primary key',
          'type'        => 'varchar',
          'not null'    => TRUE
        ),
        'spam_count'     => array(
          'description' => "The instances of this token being spam",
          'type'        => "int",
          'unsigned'    => TRUE,
          'not null'    => TRUE,
          'default'     => 0
        ),
        'ham_count'     => array(
          'description' => "The instances of this token being ham",
          'type'        => "int",
          'unsigned'    => TRUE,
          'not null'    => TRUE,
          'default'     => 0
        ),
        'spam_rating'      => array(
          'description' => "The spam rating for the token",
          'default'     => 0.4,
          'type'        => "float",
          'unsigned'    => TRUE,
          'not null'    => TRUE,
        )
      ),
      'primary key'  => array(
        'token'
      ),
    );
    return $schema;
  }

  function campaigner_install() {
    variable_set("campaigner_spam_good_total", 0);
    variable_set("campaigner_spam_bad_total", 0);
  }

  function campaigner_uninstall() {
  }