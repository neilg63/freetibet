<?php

/**
 * @file
 * Miscellaneous overrides for Freetibet site
 */

define('FTOVERRIDES_SHOPIFY_PRODUCT_TEASER_IMAGE_DISPLAY_MODE', 'last');

function ftoverrides_form_search_block_form_alter(&$form,&$form_state,$form_id) {

	$form['background'] = array(
		'#type' => 'markup',
		'#markup' => '<div class="icon-search"></div>'
	);
	$form['search_block_form']['#attributes']['placeholder'] = t('Search');
	$form['actions']['submit']['#value'] = t('Go');
}

/*
 * implements hook_node_view
*/
function ftoverrides_node_view($node,$view_mode) {
	switch ($node->type) {
		case 'media_section':
		case 'text':
		case 'box':
		case 'take_action':
		case 'key_points':
    case 'slide_section':
			if (node_is_page($node)) {
				$nid = ftoverrides_fetch_parent_nid($node);
				if ($nid > 0) {
					drupal_goto('node/' . $nid);
				}
			}
			$override_view_modes = array('full','default');
			if (in_array($view_mode,$override_view_modes)) {
				$mode = 'full';
				$items = field_get_items('node',$node,'field_layout_mode');
				if (!empty($items) && isset($items[0]) && isset($items[0]['value']) && is_string($items[0]['value'])) {
					$mode = $items[0]['value'];
				}
        
				if (!empty($items) && isset($items[0]) && isset($items[0]['value']) && is_string($items[0]['value'])) {
					$mode = $items[0]['value'];
				}
				if ($mode != 'full' && empty($node->page_viewmode)) {
					$node->page_viewmode = $mode;
					$node->content = node_view($node,$mode);
				}
			
				$show_title = true;
				if (isset($node->field_show_title)) {
					$show_title = false;
					$items = field_get_items('node',$node,'field_show_title');
					if (!empty($items) && isset($items[0]) && isset($items[0]['value']) && is_numeric($items[0]['value'])) {
						$show_title = (bool) $items[0]['value'];
					}
					
					if (!$show_title && isset($node->content['title'])) {
						unset($node->content['title']);
					}
				}
			}
			break;
		case 'donation':
			if (isset($node->content['add_to_cart']) && isset($node->content['add_to_cart']['#form'])) {
				$add_to_cart_form =& $node->content['add_to_cart']['#form'];
				if (isset($add_to_cart_form['donate_amount']) && isset($add_to_cart_form['varprice'])) {
					$add_to_cart_form['donate_amount'] = array(
						'#type' => 'hidden',
						'#name' => 'donate_amount',
						'#value' => $add_to_cart_form['varprice']['#default_value']
					);
				}
			}
			break;
		case 'page':
    case 'blog':
    case 'news_article':
			ftoverrides_set_first_page_section_position($node,$view_mode);
      if (user_access("edit any page content") && node_is_page($node)) {
        module_load_include('inc','ftoverrides','ftoverrides.edit');
        _ftoverrides_node_edit_view($node);
      }
			break;
	}
}

function ftoverrides_node_presave($node) {
  module_load_include('inc','ftoverrides','ftoverrides.edit');
  _ftoverrides_node_presave($node);
}

function ftoverrides_node_insert($node) {
  module_load_include('inc','ftoverrides','ftoverrides.edit');
  _ftoverrides_node_insert($node);
}

function ftoverrides_set_first_page_section_position($node,$view_mode) {
  $node->node_extra_class = '';
  $has_top = isset($node->content['top']);
	if ($view_mode == 'full' && isset($node->field_page_sections) && isset($node->content['field_page_sections']) && $has_top) {
		$move_first_page_section = _ftoverrides_set_first_page_section_position($node,$view_mode);
  	if (!$move_first_page_section  && isset($node->content['top'])) {
  		unset($node->content['top']);
  	}
	}
  if ($has_top && empty($node->field_page_sections)) {
    unset($node->content['top']);
  }
}

function _ftoverrides_set_first_page_section_position($node,$view_mode) {
	$move_first_page_section = false;
  $extraClass = '';
	if (isset($node->content['field_page_sections']['#items']) && is_array($node->content['field_page_sections']['#items'])) {
		$num_items = count($node->content['field_page_sections']['#items']);
		if ($num_items > 0 ) {
			
			$field_items = field_get_items('node',$node,'field_section_position');
			if (!empty($field_items) && isset($field_items[0]['value'])) {
				$value = (int) $field_items[0]['value'];
				if ($value > 0) {
					$move_first_page_section = true;
					switch ($value) {
						case 2:
							$extraClass = 'top-section-pinned';
							break;
					}
				}
			}
			if ($move_first_page_section) {
				$items = $node->content['field_page_sections']['#items'];
        if (count($items) > 0) {
  				$firstItem = array_shift($items);
  				$last_index = $num_items - 1;

  				for ($i=0;$i < $num_items;$i++) {
  					if ($i == 0) {
  						$firstRenderItem = $node->content['field_page_sections'][$i];
  					}
  					if ($i < $last_index) {
  						$node->content['field_page_sections'][$i] = $node->content['field_page_sections'][($i+1)];
  					}
  					else {
  						unset($node->content['field_page_sections'][$i]);
  					}
  				}
  				$node->content['field_page_sections']['#items'] = $items;
          $node->content['top']['#items'] = array($firstItem);
        }
			}
			
			$node->content['top'][0] = array(
				'#markup' => render($firstRenderItem)
			);
			if (!empty($extraClass)) {
				$node->node_extra_class = $extraClass;
			}
		}
	}
	return $move_first_page_section;
}

/*
 * Implements hook_ds_fields_info
*/

function ftoverrides_ds_fields_info($entity_type) {
	$fields = array();

	switch ($entity_type) {
		case 'file':
			$fields['related_text'] = array(
					'title' => t('Text in referencing entity'),
					'field_type' => DS_FIELD_TYPE_FUNCTION,
					'function' => 'ftoverrides_related_text',
					'properties' => array(
							'settings' => array(
							),
					)
			);
			return array($entity_type => $fields);
			break;
		case 'node':
			$fields['top'] = array(
					'title' => t('Target top section'),
					'field_type' => DS_FIELD_TYPE_FUNCTION,
					'function' => 'ftoverrides_top_section',
					'properties' => array(
							'settings' => array(
							),
					)
			);
			return array($entity_type => $fields);
			break;
  	case 'shopify_product':
      
  		$fields['shopify_title_link'] = array(
  				'title' => t('Title link to Shopify product page'),
  				'field_type' => DS_FIELD_TYPE_FUNCTION,
  				'function' => 'ftoverrides_shopify_title_link',
  		);
      
  		$fields['shopify_image_link'] = array(
  				'title' => t('Image link to Shopify product page'),
  				'field_type' => DS_FIELD_TYPE_FUNCTION,
  				'function' => 'ftoverrides_shopify_image_link',
  		);
      
  		$fields['shopify_detail_link'] = array(
  				'title' => t('View more link to Shopify product page'),
  				'field_type' => DS_FIELD_TYPE_FUNCTION,
  				'function' => 'ftoverrides_shopify_detail_link',
  		);
  		return array($entity_type => $fields);  
	}
	return;
}

function ftoverrides_top_section($field) {
	if (isset($field['entity']) && is_object($field['entity']) && $field['entity_type'] == 'node') {
		return t("Top section");
	}
}


function ftoverrides_fetch_parent_nid($node) {
	$query = new EntityFieldQuery();
	$query->entityCondition('entity_type', 'node')
	->fieldCondition('field_page_sections', 'target_id', $node->nid, '=');
	$result = $query->execute();
	if (is_array($result) && isset($result['node']) && is_array($result['node']) && !empty($result['node'])) {
		$nids = array_keys($result['node']);
		return array_shift($nids);
	}
	return 0;
}

function ftoverrides_related_text($field) {
	if (isset($field['entity']) && is_object($field['entity']) && $field['entity_type'] == 'file') {
		$text = '';
		$entity = $field['entity'];
		if ($entity->referencing_entity instanceof FieldCollectionItemEntity) {
			if (isset($entity->referencing_entity->field_text)) {
				$items = field_get_items('field_collection_item',$entity->referencing_entity,'field_text');
				if (is_array($items) && !empty($items) && isset($items[0]['safe_value'])) {
					if (is_string($items[0]['safe_value'])) {
						return $items[0]['safe_value'];
					}
				}
			}
			return $text;
		}
	}
}


function ftoverrides_form_node_form_alter(&$form, $form_state, $form_id) {
	module_load_include('inc','ftoverrides','ftoverrides.edit');
	_ftoverrides_form_node_form_alter($form,$form_state,$form_id);
}

function ftoverrides_get_available_view_modes($bundle = NULL) {
	$view_modes = array();
	$prefix = 'field_bundle_settings_node__';
	$data = variable_get($prefix . $bundle, NULL);
	$excludeViewModes = array('search_index','summary','teaser','default','full');
	$view_modes = array(
			'full' => 'Full (Default full page view)',
	);
	if (is_array($data) && isset($data['view_modes']) && is_array($data['view_modes']) && !empty($data['view_modes'])) {
		foreach ($data['view_modes'] as $name => $data) {
			if ($data['custom_settings'] && !in_array($name,$excludeViewModes)) {
				$view_modes[$name] = $name;
			}
		}
	}
	return $view_modes;
}


function ftoverrides_wysiwyg_editor_settings_alter(&$settings, $context) {
	if ($context['profile']->editor == 'ckeditor') {
		switch ($context['profile']->format) {
			case 'full_html':
				$settings['height'] = 360;
				break;
			case 'filtered_html':
				$settings['height'] = 200;
				break;
		}
	}
}

/*
* Mailchimp form label overrides
*/

function ftoverrides_form_mailchimp_lists_user_subscribe_form_email_updates_alter(&$form, &$form_state,$form_id) {
  $form['mailchimp_lists']['mailchimp_email_updates']['mergevars']['EMAIL']['#title'] = t("Email");
}

/*
* Payment form overrides
*/
function ftoverrides_form_payment_donation_form_alter(&$form,&$form_state,$form_id) {
  if (isset($form['payment_method']) && isset($form['payment_method']['#pmids'])) {
    module_load_include('inc','ftoverrides','ftoverrides.donate');
    _ftoverrides_form_payment_donation_form_alter($form,$form_state,$form_id);
  }
}

function theme_ftoverrides_donation_presets($vars = array()) {
  module_load_include('inc','ftoverrides','ftoverrides.donate');
  return _theme_ftoverrides_donation_presets($vars);
}

function ftoverrides_donation_form_validate(&$form,&$form_state) {
  module_load_include('inc','ftoverrides','ftoverrides.donate');
  _ftoverrides_donation_form_validate($form,$form_state);
}

function ftoverrides_block_view_alter(&$data, $block) {
  if ($block->module == 'payment_donation' && $block->delta == 'payment_donation') {
    $context = request_path();
    $parts = explode('/',$context);
    if (count($parts)>1) {
      $context = array_shift($parts);
    }
    switch ($context) {
      case 'join';
        $block->title = "Join Online";
        break;
    }
  }
}

function ftoverrides_donation_form_after_build($form, &$form_state) {
  drupal_add_js(drupal_get_path('module','ftoverrides') . '/js/donate.js');
  if (is_array($form['#validate']) && !in_array('ftoverrides_donation_form_validate', $form['#validate'])) {
    $form['#validate'][] = 'ftoverrides_donation_form_validate';
  }
  return $form;
}

function ftoverrides_form_block_admin_configure_alter(&$form,&$form_state,$form_id) {
  if (isset($form['module']) && $form['module']['#value'] == 'payment_donation') {
    module_load_include('inc','ftoverrides','ftoverrides.edit');
    _ftoverrides_form_block_admin_configure_alter($form,$form_state);
  }
}

function ftoverrides_donation_block_admin_configure_submit(&$form,&$form_state) {
  if (isset($form_state['values']['ftoverrides_min_donation_amount'])) {
    module_load_include('inc','ftoverrides','ftoverrides.edit');
    _ftoverrides_donation_block_admin_configure_submit($form_state['values']);
  }
}

function ftoverrides_shopify_detail_link($field) {
	if ($entity = _ftoverrides_extra_entity_from_ds_field($field)) {
		$product_link = _ftoverrides_get_shopfify_product_link($entity);
		if (!empty($product_link)) {
      $details_label = variable_get('ftoverrides_shopify_product_view_details','View details');
      $details_label_long = variable_get('ftoverrides_shopify_product_view_details_long','View product details page on our shopify site');
      $opts = array('attributes' => array('class' => array('shopify-product-link'),'title' => $details_label_long));
			return l($details_label, $product_link, $opts);
		}
	}
}

function ftoverrides_form_paypal_payment_pps_form_redirect_alter(&$form,&$form_state,$form_id) {
  module_load_include('inc','ftoverrides','ftoverrides.donate');
  _ftoverrides_form_paypal_payment_pps_form_redirect_alter($form,$form_state,$form_id);
}

function ftoverrides_shopify_title_link($field) {
	if ($entity = _ftoverrides_extra_entity_from_ds_field($field)) {
		$product_link = _ftoverrides_get_shopfify_product_link($entity);
		if (!empty($product_link)) {
      $details_label_long = variable_get('ftoverrides_shopify_product_view_details_long','View product details page on our shopify site');
      $opts = array('attributes' => array('class' => array('shopify-product-link'),'title' => $details_label_long));
			return l($entity->title, $product_link, $opts);
		}
	}
}

function ftoverrides_shopify_image_link($field) {
	if ($entity = _ftoverrides_extra_entity_from_ds_field($field)) {
		$product_link = _ftoverrides_get_shopfify_product_link($entity);
		if (!empty($product_link)) {
      $details_label_long = variable_get('ftoverrides_shopify_product_view_details_long','View product details page on our shopify site');
      $opts = array('attributes' => array('class' => array('shopify-product-link'),'title' => $details_label_long), 'html' => TRUE);
      $mode = variable_get('ftoverrides_shopify_product_teaser_image_display_mode',FTOVERRIDES_SHOPIFY_PRODUCT_TEASER_IMAGE_DISPLAY_MODE);
      //$items = field_get_items('shopify_product',$entity,'shopify_product_images');
      if (!empty($entity->shopify_product_images)) {
        // first last image
        foreach ($entity->shopify_product_images as $lang => $data) {
          if (is_string($lang) && is_array($data) && isset($data[0])) {
            if ($mode == 'last') {
              $image_items = array(array_pop($data));
            } else {
              $image_items = array(array_unshift($data));
            }
            $entity->shopify_product_images[$lang] = $image_items;
          }
        }
        $display = array('settings' => array('image_style' => 'shopify_product_thumbnail'),'label' => 'hidden');
        $view = field_view_field('shopify_product',$entity,'shopify_product_images',$display);
        $html = render($view);
        return l($html, $product_link, $opts);
      }
		}
	}
}

function _ftoverrides_extra_entity_from_ds_field($field) {
  if (isset($field['entity']) && is_object($field['entity'])) {
      return $field['entity'];
  }
  return false;
}

function _ftoverrides_get_shopfify_product_link($entity) {
  $base_url = '';
  if (is_object($entity)) {
  	$handle = $entity->handle;
  	if (!empty($handle)) {
  		$base_url = variable_get('ftoverrides_shopify_domain','http://shop.freetibet.org');
      $product_prefix = variable_get('ftoverrides_shopify_product_prefix','products');
    }
    if (!empty($product_prefix)) {
      $base_url .= '/' . $product_prefix;
    }
  }
  return $base_url . '/' . $handle;
}

function ftoverrides_node_form_after_build(&$form,&$form_state) {
  $mod_path = drupal_get_path('module','ftoverrides');
  drupal_add_js($mod_path . '/js/edit.js');
  drupal_add_css($mod_path . '/css/edit.css');
  return $form;
}